- builder:
    name: setup-copr-repos
    builders:
        - shell: |
            for repo in {copr-repos}; do
                sudo dnf copr enable -y "$repo"
            done

- builder:
    name: remove-copr-repos
    builders:
        - shell: |
            for repo in {copr-repos}; do
                sudo dnf copr remove -y "$repo"
            done

- builder:
    name: install-builddeps
    builders:
        - setup-copr-repos:
            copr-repos: "{copr-repos}"
        - shell: |
            # FreeIPA requires:
            DEPS=$(awk '/^BuildRequires/ {{ print $2 }}' freeipa.spec.in)
            # Fedora min build env (https://fedoraproject.org/wiki/Packaging:Guidelines#Exceptions_2)
            DEPS="$DEPS bash bzip2 coreutils cpio diffutils fedora-release"
            DEPS="$DEPS findutils gawk gcc gcc-c++ grep gzip info make patch"
            DEPS="$DEPS redhat-rpm-config rpm-build sed shadow-utils tar unzip"
            DEPS="$DEPS util-linux which xz"
            # install all the RPMs
            sudo dnf erase -y 'freeipa-*' || :
            sudo dnf --refresh update -y
            sudo dnf install -y rpm-build $DEPS
        - remove-copr-repos:
            copr-repos: "{copr-repos}"
        - shell: "rpm -qa | sort"

- builder:
    name: install-built-rpms
    builders:
        - setup-copr-repos:
            copr-repos: "{copr-repos}"
        - copyartifact:
            project: "{prefix}-build-{project}"
            which-build: upstream-build
            fallback-to-last-successful: true
        - create-local-repo
        - shell: "sudo dnf remove -y 'freeipa-*' || :"
        - shell: "more /etc/yum.repos.d/* | cat"
        - shell: |
            sudo dnf --refresh update -y
            sudo dnf install --refresh -y freeipa-server-dns freeipa-server-trust-ad python-ipatests
        - remove-copr-repos:
            copr-repos: "{copr-repos}"
        - shell: "rpm -qa | sort"

- builder:
    name: uninstall-freeipa-packages
    builders:
        - shell: |
            sudo dnf erase -y freeipa-server-* python-ipatests

- builder:
    name: uninstall-freeipa-packages-soft
    builders:
        - shell: |
            sudo dnf erase -y freeipa-server-* python-ipatests || :

- builder:
    name: build-rpms
    builders:
        - shell: |
            git clean -fxd
            echo $(date -u +%Y%m%d%H%M%SZ)jenkins${BUILD_NUMBER}git$(git rev-parse --short HEAD) > RELEASE
            make rpms

- builder:
    name: kra-uninstall
    builders:
        - shell: |
            sudo ipa-kra-install --uninstall -U || :

- builder:
    name: uninstall
    builders:
        - shell: |
            sudo ipa-server-install --uninstall -U || :

- builder:
    name: clean-up-environment
    builders:
        - uninstall
        - shell: |
            sudo dnf remove -y 'freeipa-*' || :
            sudo setenforce 1 || :
            sudo iptables -F || :
            sudo systemctl stop dirsrv.target || :
            sudo pkidestroy -s CA -i pki-tomcat || :
            sudo systemctl reset-failed pki-tomcatd@pki-tomcat.service || :

- builder:
    name: download-certificate
    builders:
        - shell: |
            # download certificates for CA less files
            wget -O star-cert.p12 $FREEIPACI_STAR_CERT
            wget -O star-cert-ca.crt $FREEIPACI_CA_CERT

- builder:
    name: install
    builders:
        - shell: |
            # install
            export DOMAIN=$(hostname -f | sed -e 's/^vm/dom/')
            REALM=$(echo $DOMAIN | tr '[:lower:]' '[:upper:]')
            sudo ipa-server-install \
                {options-dns-setup} \
                {options-ca-setup} \
                -p "$FREEIPACI_PASSWORD" -a "$FREEIPACI_PASSWORD" \
                -r "$REALM" -n "$DOMAIN" \
                -U

            echo $FREEIPACI_PASSWORD | kinit admin

- builder:
    name: kra-install
    builders:
        - shell: |
            # kra installation
            sudo ipa-kra-install -U --password="${FREEIPACI_PASSWORD}"

- builder:
    name: setup-default-conf
    builders:
        - shell: |
            export DOMAIN=$(hostname -f | sed -e 's/^vm/dom/')
            REALM=$(echo $DOMAIN | tr '[:lower:]' '[:upper:]')
            BASEDN=$(echo $DOMAIN | sed -e 's/\./,dc=/g' -e 's/^/dc=/')

            mkdir -p ~/.ipa/
            cp /etc/ipa/default.conf ~/.ipa/default.conf

- builder:
    name: copy-pw-files
    builders:
        - shell: |
            rm -rvf $HOME/.ipa
            mkdir $HOME/.ipa
            echo $FREEIPACI_PASSWORD > $HOME/.ipa/.dmpw
            sudo cp -R /etc/httpd/alias $HOME/.ipa/alias
            sudo cp /etc/httpd/alias/pwdfile.txt $HOME/.ipa/alias/.pwd
            sudo chown -R jenkins:jenkins $HOME/.ipa

- builder:
    name: create-local-repo
    builders:
        - shell: "sudo dnf install -y createrepo_c"
        - shell: |
            export REPO_DEST="/tmp/freeipa-build"
            export RPM_DIR="dist/rpms"
            rm -fr "$REPO_DEST" || :
            mkdir -p "$REPO_DEST/debug"
            find "$RPM_DIR" -type f -name 'freeipa-debuginfo-*.rpm' -execdir cp -t "$REPO_DEST/debug" {} +
            find "$RPM_DIR" -type f ! -name '*debuginfo*.rpm' -execdir cp -t "$REPO_DEST" {} +
            find "$REPO_DEST" -type d -execdir createrepo_c {} +
        - shell: |
            cat > /tmp/freeipa-local.repo <<EOF
            [freeipa-local]
            name=freeipa-local
            baseurl=file:///tmp/freeipa-build/
            enabled=1
            gpgcheck=0

            [freeipa-local-debug]
            name=freeipa-local-debug
            baseurl=file:///tmp/freeipa-build/debug/
            enabled=0
            gpgcheck=0
            EOF
            sudo mv /tmp/freeipa-local.repo /etc/yum.repos.d/

- builder:
    name: cleanup-local-repo
    builders:
        - shell: |
            sudo rm -f /etc/yum.repos.d/freeipa-local.repo || echo "Could not delete the repo file."
            sudo rm -rf /tmp/freeipa-build || echo "Could not delete the repository folder."

- builder:
    name: configure-updates-testing
    builders:
        - shell: |
            [ "{enable-updates-testing}" = "True" ] && sudo dnf config-manager --set-enabled updates-testing || :

- builder:
    name: disable-updates-testing
    builders:
        - shell: |
            sudo dnf config-manager --set-disabled updates-testing


- builder:
    name: clean-user-configuration
    builders:
        - shell: |
            rm -fr $HOME/.ipa || :

- builder:
    name: clean-httpd-dir
    builders:
        - shell: |
            sudo rm -fr /etc/httpd/alias
            sudo rm -fr /etc/httpd/conf/ipa.keytab
            sudo rm -fr /etc/httpd/conf/password.conf*

- builder:
    name: prepare-controller
    builders:
        - shell: |
            wget -O ./prepare-hosts $FREEIPACI_PREPARE_HOSTS_URL
            chmod +x ./prepare-hosts
            wget $FREEIPACI_HOSTS_DOMAINS
            wget $FREEIPACI_HOSTS_STATIC

- builder:
    name: destroy-hosts
    builders:
        - shell: |
            wget -O ./shutdown-hosts $FREEIPACI_SHUTDOWN_HOSTS_URL
            chmod +x ./shutdown-hosts
            ./shutdown-hosts < test-config.yaml || :


- builder:
    name: download-koji-packages
    builders:
        - shell: |
            mkdir koji-download
            pushd koji-download
            for BUILD in {koji-builds}; do
                koji download-build --arch $(uname -i) $BUILD
            done
            popd
        - shell: |
            export REPO_DEST="/tmp/local-koji-repo"
            export RPM_DIR="koji-download"
            rm -fr "$REPO_DEST" || :
            mkdir -p "$REPO_DEST/debug"
            find "$RPM_DIR" -type f -name 'freeipa-debuginfo-*.rpm' -execdir cp -t "$REPO_DEST/debug" {} +
            find "$RPM_DIR" -type f ! -name '*debuginfo*.rpm' -execdir cp -t "$REPO_DEST" {} +
            find "$RPM_DIR" -type d -execdir createrepo_c {} +
        - shell: |
            cat > /tmp/local-koji.repo <<EOF
            [koji-local]
            name=koji-local
            baseurl=file:///tmp/local-koji-repo/
            enabled=1
            gpgcheck=0

            [koji-local-debug]
            name=koji-local-debug
            baseurl=file:///tmp/local-koji-repo/debug/
            enabled=0
            gpgcheck=0
            EOF
            sudo mv /tmp/local-koji.repo /etc/yum.repos.d/
        - shell: |
            rm -fr koji-download

- builder:
    # This builder downloads all non-source packages into
    # dist/rpms directory
    # It is a hack around the provisioning scripts that expect
    # built rpms on some location
    name: download-copr-repo-content
    builders:
        - shell: |
            set -x

            COPR_URL="{copr-base-url}"
            BUILD_ID="{copr-build-id}"
            DEST_PATH="dist/rpms"

            BASE_URL="${{COPR_URL}}/${{BUILD_ID}}-freeipa/"
            BUILD_LOG_URL="${{BASE_URL}}/build-${{BUILD_ID}}.rsync.log"

            rm -fr $DEST_PATH || :
            mkdir -p $DEST_PATH
            curl $BUILD_LOG_URL | grep "rpm$" | grep -v src | xargs -n 1 -I "rpmname" curl -o $DEST_PATH/rpmname "$BASE_URL/"rpmname
